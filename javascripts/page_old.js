// Generated by CoffeeScript 1.8.0
(function() {
  $(function() {
    var dom, id, ids, noDnD, onDrop, staged, _i, _len;
    dom = {};
    ids = ['image1', 'image2', 'image3', 'image1_data'];
    for (_i = 0, _len = ids.length; _i < _len; _i++) {
      id = ids[_i];
      dom[id] = $("#" + id);
    }
    staged = {};
    noDnD = function(event) {
      event.preventDefault();
      return false;
    };
    $(document.body).on('dragover', noDnD).on('drop', noDnD);
    dom.dropped = $('.dropped');
    dom.dropped.hide();
    
    loadContents('image1', 'image1.txt');
    
    function loadContents(Myid, Myfile) {
	    var xmlhttp;
		if (window.XMLHttpRequest){ xmlhttp=new XMLHttpRequest();}
		else{xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");}
		xmlhttp.onreadystatechange = function() {
		  if (xmlhttp.readyState==4 && xmlhttp.status==200){document.getElementById(Myid).style.background = "url("+ xmlhttp.responseText+")" ;};};
		xmlhttp.open("GET",Myfile,true);
		xmlhttp.send();
	    return;   
   }
    
    
    
    
    
    
    dom.image1_data.on("click", function() {
      var onRead;
      onRead = function(file, content) {
        if (js.File.isWebImageType(file.type)) {
          return dom.image1.attr({
            style: "background:url(" + content + ") no-repeat center center; background-size:cover;"
          });
        }
      };
      return js.File.read(onRead);
    });
    dom.open.on("click", function() {
      var onRead;
      onRead = function(file, content) {
        if (js.File.isTextType(file.type)) {
          return dom.text.text(content);
        } else if (js.File.isWebImageType(file.type)) {
          return dom.image.attr({
            src: content
          });
        }
      };
      return js.File.read(onRead);
    });
    dom.save.click(function() {
      var content, type, _j, _len1, _ref, _results;
      js.File.write('page_text.txt', dom.text.text());
      content = dom.image.attr('src');
      _ref = ['png', 'jpeg'];
      _results = [];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        type = _ref[_j];
        if (new RegExp("^data:image\/" + type + ";base64").test(content)) {
          _results.push(js.File.write('page_image.text', content));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
    dom.upload.click(function() {
      dom.dropped.hide();
      return dom.drop_row.show();
    });
    dom.upload_data.click(function() {
      if (staged.type === 'text') {
        return dom.text.text(staged.content);
      } else if (staged.type === 'image') {
        return dom.image.attr({
          src: staged.content
        });
      }
    });
    onDrop = (function(_this) {
      return function(file, content) {
        dom.drop_row.hide();
        staged.content = content;
        if (js.File.isTextType(file.type)) {
          staged.type = 'text';
          dom.drop_text_row.show();
          return dom.drop_text.val(content);
        } else if (js.File.isWebImageType(file.type)) {
          staged.type = 'image';
          dom.drop_image_row.show();
          return dom.drop_image.attr({
            src: content
          });
        } else {
          staged.type = 'binary';
          dom.drop_binary_row.show();
          return dom.drop_binary.val(content);
        }
      };
    })(this);
    new js.FileDnD(dom.drop, onDrop);
    return null;
  });


  /*
    cd "Users/vin/Desktop/course_page/"
    coffee -cwo javascripts/ coffeescripts/
   */

}).call(this);
